/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 07 02:00:19 GMT 2018
 */

package com.wakaleo.gameoflife.domain;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.wakaleo.gameoflife.domain.Cell;
import com.wakaleo.gameoflife.domain.Grid;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Grid_ESTest extends Grid_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Grid grid0 = new Grid();
      grid0.getCellAt(2, 0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Grid grid0 = new Grid(1, 1);
      grid0.getLiveNeighboursAt(1, 0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Grid grid0 = new Grid("");
      grid0.toString();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Grid grid0 = new Grid();
      grid0.getWidth();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Grid grid0 = new Grid();
      grid0.getHeight();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Grid grid0 = new Grid(55, 55);
      grid0.toString();
      grid0.toString();
      grid0.toString();
      // Undeclared exception!
      grid0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Grid grid0 = new Grid(695, 1);
      Cell cell0 = Cell.DEAD_CELL;
      // Undeclared exception!
      try { 
        grid0.setCellAt(695, 1358, cell0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1358
         //
         verifyException("com.wakaleo.gameoflife.domain.Grid", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Grid grid0 = new Grid(0, 0);
      // Undeclared exception!
      try { 
        grid0.getWidth();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.wakaleo.gameoflife.domain.Grid", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Grid grid0 = new Grid(0, 0);
      // Undeclared exception!
      try { 
        grid0.getContents();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.wakaleo.gameoflife.domain.Grid", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Grid grid0 = new Grid(0, 1);
      // Undeclared exception!
      try { 
        grid0.getCellAt(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.wakaleo.gameoflife.domain.Grid", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Grid grid0 = null;
      try {
        grid0 = new Grid((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wakaleo.gameoflife.domain.GridReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Grid grid0 = new Grid(2401, 2401);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Grid grid0 = null;
      try {
        grid0 = new Grid(462, (-212));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wakaleo.gameoflife.domain.Grid", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Grid grid0 = new Grid("");
      grid0.getWidth();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Grid grid0 = new Grid();
      grid0.getLiveNeighboursAt(1771, 0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Grid grid0 = new Grid();
      assertEquals(3, grid0.getWidth());
      
      Cell cell0 = Cell.LIVE_CELL;
      grid0.setCellAt(0, 2, cell0);
      int int0 = grid0.getLiveNeighboursAt(0, 3);
      assertEquals(3, grid0.getHeight());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Grid grid0 = new Grid(0, 0);
      int int0 = grid0.getHeight();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Grid grid0 = new Grid();
      grid0.getContents();
      assertEquals(3, grid0.getHeight());
      assertEquals(3, grid0.getWidth());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Grid grid0 = null;
      try {
        grid0 = new Grid("4vab\"lu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.wakaleo.gameoflife.domain.GridReader", e);
      }
  }
}
